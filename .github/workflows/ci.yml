name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  terraform-validate:
    name: Terraform Validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [aws, azure, google, more_examples]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Format Check
        working-directory: ${{ matrix.directory }}
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        working-directory: ${{ matrix.directory }}
        run: terraform init -backend=false

      - name: Terraform Validate
        working-directory: ${{ matrix.directory }}
        run: terraform validate

  terraform-lint:
    name: Terraform Lint (TFLint)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [aws, azure, google, more_examples]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Initialize TFLint
        working-directory: ${{ matrix.directory }}
        run: tflint --init

      - name: Run TFLint
        working-directory: ${{ matrix.directory }}
        run: tflint --format compact

  terraform-security:
    name: Security Scan (tfsec)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: true

  infracost:
    name: Infracost Cost Estimation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Infracost
        uses: infracost/actions/setup@v3
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Generate Infracost diff (AWS)
        run: |
          infracost breakdown --path=aws \
            --usage-file=aws/infracost-usage.yml \
            --format=json \
            --out-file=/tmp/infracost-aws.json
        continue-on-error: true

      - name: Generate Infracost diff (Azure)
        run: |
          infracost breakdown --path=azure \
            --usage-file=azure/infracost-usage.yml \
            --format=json \
            --out-file=/tmp/infracost-azure.json
        continue-on-error: true

      - name: Generate Infracost diff (Google)
        run: |
          infracost breakdown --path=google \
            --usage-file=google/infracost-usage.yml \
            --format=json \
            --out-file=/tmp/infracost-google.json
        continue-on-error: true

      - name: Post Infracost comment
        run: |
          infracost comment github --path=/tmp/infracost-*.json \
            --repo=$GITHUB_REPOSITORY \
            --github-token=${{ secrets.GITHUB_TOKEN }} \
            --pull-request=${{ github.event.pull_request.number }} \
            --behavior=update
        continue-on-error: true

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for trailing whitespace
        run: |
          if git diff --check HEAD~1 HEAD; then
            echo "No trailing whitespace found"
          else
            echo "Trailing whitespace detected"
            exit 1
          fi
        continue-on-error: true

      - name: Markdown Lint
        uses: actionshub/markdownlint@v3.1.4
        continue-on-error: true

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [terraform-validate, terraform-lint, terraform-security, code-quality]
    if: always()
    
    steps:
      - name: Check CI Status
        run: |
          echo "Terraform Validation: ${{ needs.terraform-validate.result }}"
          echo "Terraform Lint: ${{ needs.terraform-lint.result }}"
          echo "Security Scan: ${{ needs.terraform-security.result }}"
          echo "Code Quality: ${{ needs.code-quality.result }}"
          
          if [[ "${{ needs.terraform-validate.result }}" == "failure" ]] || \
             [[ "${{ needs.terraform-lint.result }}" == "failure" ]]; then
            echo "CI failed - critical checks did not pass"
            exit 1
          fi
          
          echo "CI completed successfully"
